(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{362:function(a,s,t){"use strict";t.r(s);var e=t(3),n=Object(e.a)({},function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"centos新系统依赖安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#centos新系统依赖安装","aria-hidden":"true"}},[a._v("#")]),a._v(" CentOS新系统依赖安装")]),a._v(" "),t("h1",{attrs:{id:"新centos需要安装的工具："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新centos需要安装的工具：","aria-hidden":"true"}},[a._v("#")]),a._v(" 新centOS需要安装的工具：")]),a._v(" "),t("h2",{attrs:{id:"卸载软件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#卸载软件","aria-hidden":"true"}},[a._v("#")]),a._v(" 卸载软件")]),a._v(" "),t("h3",{attrs:{id:"rpm安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rpm安装","aria-hidden":"true"}},[a._v("#")]),a._v(" RPM安装")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -qa "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" 软件名称\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -e --nodeps 列出的软件全名\n")])])]),t("h3",{attrs:{id:"yum安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yum安装","aria-hidden":"true"}},[a._v("#")]),a._v(" yum安装")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("yum remove 软件名\n")])])]),t("h3",{attrs:{id:"源码编译安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源码编译安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 源码编译安装")]),a._v(" "),t("h4",{attrs:{id:"编译时的路径如果指定了-prefix-usr-local-xxx-直接rm-rf-usr-local-xxx即可。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译时的路径如果指定了-prefix-usr-local-xxx-直接rm-rf-usr-local-xxx即可。","aria-hidden":"true"}},[a._v("#")]),a._v(" 编译时的路径如果指定了--prefix /usr/local/xxx 直接rm -rf /usr/local/xxx即可。")]),a._v(" "),t("h4",{attrs:{id:"没指定路径，那就到源码路径执行make-uninstall，如果最初的编译文件夹被删除了，还可以重新下载、编译，然后删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#没指定路径，那就到源码路径执行make-uninstall，如果最初的编译文件夹被删除了，还可以重新下载、编译，然后删除","aria-hidden":"true"}},[a._v("#")]),a._v(" 没指定路径，那就到源码路径执行make uninstall，如果最初的编译文件夹被删除了，还可以重新下载、编译，然后删除")]),a._v(" "),t("h4",{attrs:{id:"如果源码被删除就查找并删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果源码被删除就查找并删除","aria-hidden":"true"}},[a._v("#")]),a._v(" 如果源码被删除就查找并删除")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" / -name 软件名称\n")])])]),t("h3",{attrs:{id:"通过checkinstall管理编译安装过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过checkinstall管理编译安装过程","aria-hidden":"true"}},[a._v("#")]),a._v(" 通过checkinstall管理编译安装过程")]),a._v(" "),t("h4",{attrs:{id:"_1、使用checkinstall编译安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、使用checkinstall编译安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 1、使用checkinstall编译安装")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("./configure\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\ncheckinstall\n")])])]),t("h4",{attrs:{id:"checkinstall会完成以下任务："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checkinstall会完成以下任务：","aria-hidden":"true"}},[a._v("#")]),a._v(" CheckInstall会完成以下任务：")]),a._v(" "),t("ul",[t("li",[a._v("调用make install，然后用installwatch监视、记录整个安装过程中添加的文件")]),a._v(" "),t("li",[a._v("等到安装完成，把记录的文件打包，根据不同的系统创建安装包：.rpm或.deb")]),a._v(" "),t("li",[a._v("注：安装包会保存在源代码目录，以便复制到其它机器安装，省去重复编译的麻烦。")]),a._v(" "),t("li",[a._v("移除make install安装的文件")]),a._v(" "),t("li",[a._v("调用系统安装工具来安装第2步创建的安装包：rpm -i或dpkg -i")])]),a._v(" "),t("h4",{attrs:{id:"_2、卸载checkinstall安装的软件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、卸载checkinstall安装的软件","aria-hidden":"true"}},[a._v("#")]),a._v(" 2、卸载checkinstall安装的软件")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("CentOS: "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -e package_name\nUbuntu: dpkg -r package_name\n")])])]),t("hr"),a._v(" "),t("p",[a._v("修改时区为亚洲上海")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n")])])]),t("p",[a._v("查看系统语言")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看系统当前使用语言包")]),a._v("\nlocale\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看系统拥有语言包")]),a._v("\nlocale -a\n")])])]),t("p",[a._v("如果没有zh_CN.utf8就需要安装简体中文语言包")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" kde-l10n-Chinese\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#glibc-common软件包包括用于GNU libc库的常见二进制文件，以及国家语言（locale）支持。")]),a._v("\nyum -y reinstall glibc-common\nyum -y groupinstall chinese-support\n")])])]),t("p",[a._v("设置中文utf8编码（临时）：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("export")]),a._v(" LANG"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("zh_CN.utf8\n")])])]),t("p",[a._v("方法（一）修改vi /etc/locale.conf文件内容为（长久）：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("LANG"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"zh_CN.utf8"')]),a._v("\nLANGUAGE"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"zh_CN.UTF-8:zh_CN.utf8:zh_CN"')]),a._v("\nSUPPORTED"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"zh_CN.utf8:zh_CN:zh:en_US.utf8:en_US:en"')]),a._v("\nSYSFONT"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"lat0-sun16"')]),a._v("\n")])])]),t("p",[a._v("方法（二）（长久）:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("localectl  set-locale LANG"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("zh_CN.utf8\n")])])]),t("p",[a._v("设置vi显示行号,编辑以下两个文件：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /etc/vimrc\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /etc/virc\n")])])]),t("p",[a._v("在开头或者末尾添加：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("set")]),a._v(" number\n")])])]),t("p",[a._v("vi /etc/motd这个文件，可以在里面加入自己喜欢的任何欢迎信息，这段信息将会在登录成功后显示！")]),a._v(" "),t("p",[a._v("简单的修改下配置文件可以做到每次登陆服务器自动显示磁盘情况：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取（即每次新开一个终端，都会执行bashrc）。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#只要在同一个shell界面，不管多少用户登录都只执行一次")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /etc/profile\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行. 并从/etc/profile.d目录的配置文件中搜集shell的设置。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#如果进入shell用普通用户登录后，再用su进入root用户那么将会被执行两次")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /etc/bashrc\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#当root用户登录时执行")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /root/.bash_profile\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#当每次root用户退出系统(退出bash shell)时,执行该文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /root/.bash_logout\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#当root用户登录时以及每次打开新的shell时,该该文件被读取。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" /root/.bashrc\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#/etc/profile中设定的变量(全局)的可以作用于任何用户,/.bashrc设定的变量(局部)只能继承/etc/profile中的变量,他们是”父子”关系")]),a._v("\n")])])]),t("p",[a._v("输入shift+g也就是大写的G跳转到末尾添加以下内容：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'=========================================================='")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查询系统版本")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /etc/redhat-release\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查询内核版本")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" -sr\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'=========================================================='")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查询目前所有文件系统的可用空间及使用情形")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("df")]),a._v(" -h\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'=========================================================='")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查询内存使用情况")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("free")]),a._v(" -h\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'=========================================================='")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#切换到home文件夹")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" /home\n")])])]),t("hr"),a._v(" "),t("hr"),a._v(" "),t("h1",{attrs:{id:"yum-的安装方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yum-的安装方式","aria-hidden":"true"}},[a._v("#")]),a._v(" yum 的安装方式")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" 包名（支持*） ：自动选择y，全自动\n\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" 包名（支持*） ：手动选择y or n\n\nyum remove 包名（不支持*）\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -ivh 包名（支持*）：安装rpm包\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" -e 包名（不支持*）：卸载rpm包\n\nyum info nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("查看当前版本可选"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\nyum list installed "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" 包名（不支持*）：确认是否安装过包\n")])])]),t("p",[a._v("安装并启用 EPEL 源")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yum -y install epel-release \n")])])]),t("hr"),a._v(" "),t("p",[a._v("更新yum源包")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yum -y update\n")])])]),t("hr"),a._v(" "),t("p",[a._v("which命令")]),a._v(" "),t("p",[a._v("which命令 用于查找并显示给定命令的绝对路径，环境变量PATH中\n保存了查找命令时需要遍历的目录。which指令会在环境变量$PATH设\n置的目录里查找符合条件的文件。也就是说，使用which命令，就可\n以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。")]),a._v(" "),t("p",[a._v("yum -y install which")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("安装lrzsz，是一款在linux里可代替ftp上传和下载的程序。：")]),a._v(" "),t("p",[a._v("yum  -y install lrzsz")]),a._v(" "),t("p",[a._v("命令：\n上传：rz\n下载：sz")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("安装make：")]),a._v(" "),t("p",[a._v("yum -y install gcc automake autoconf libtool make")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("查看系统是否已安装gcc编译器：")]),a._v(" "),t("p",[a._v("gcc -v")]),a._v(" "),t("p",[a._v("gcc版本较老，我们可以使用yum命令对其进行升级对其进行升级：")]),a._v(" "),t("p",[a._v("yum update gcc")]),a._v(" "),t("p",[a._v("安装g++ 编译环境gcc g++ 开发库:")]),a._v(" "),t("p",[a._v("yum -y install gcc gcc-c++")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("安装pcre 重写rewrite")]),a._v(" "),t("p",[a._v("yum -y install pcre")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("zlib gzip压缩，可直接安装一个7z\nyum -y install zlib")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("7z 7z压缩软件")]),a._v(" "),t("p",[a._v("yum -y install p7zip")]),a._v(" "),t("p",[a._v("常用命令：")]),a._v(" "),t("p",[a._v("7za e 文件名   解压到当前目录下,不保留原来的目录结构")]),a._v(" "),t("p",[a._v("7za x 文件名   解压到当前目录下,但保留原来的目录结构")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("openssl\nyum -y install openssl")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("ifconfig 及 netstat\nyum -y install net-tools")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("vim\nyum -y install vim")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("libaio\nyum -y install libaio")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("以上全是安装依赖，其实一条命令行全部都可以搞定：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yum install -y which gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel lrzsz lrzsz-devel p7zip p7zip-devel net-tools net-tools-devel vim vim-devel libaio libaio-devel\n")])])]),t("hr"),a._v(" "),t("p",[a._v("Linux下的命令行工具，我们经常会看到一些终端工具有一个字符Logo,这些Logo可以通过Figlet生成：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y figlet\n")])])]),t("div",{staticClass:"language-diff extra-class"},[t("pre",{pre:!0,attrs:{class:"language-diff"}},[t("code",[a._v("居中显示用 -c ,\n从文件导入用 -p，比如从testfile导入\nfiglet -c -p < testfile\n还可以用-w指定宽度。\n\n"),t("span",{pre:!0,attrs:{class:"token inserted"}},[a._v("+ 实时显示时间")]),a._v("\nwatch -n1 \"date '+%D%n%T' |figlet -k\"\n")])])]),t("p",[a._v("这个工具提供了 n 种样式，例如各种动物等，然后你输入的字符就放在这些图案的内部空白处。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" boxes\n")])])]),t("p",[a._v("使用boxes -l列出所有的样式。")]),a._v(" "),t("div",{staticClass:"language-diff extra-class"},[t("pre",{pre:!0,attrs:{class:"language-diff"}},[t("code",[a._v('echo [text] | boxes -d [style name]\n比如dog\necho "Hello World" | boxes -d dog\n')])])]),t("p",[a._v("Toilet可以输出更丰富的样式，它比 figlet 命令的效果更有艺术感。")]),a._v(" "),t("div",{staticClass:"language-diff extra-class"},[t("pre",{pre:!0,attrs:{class:"language-diff"}},[t("code",[a._v('echo "Hello World" | toilet -f term -F border --gay\n可以有颜色\ntoilet -f mono12 -F metal Linux\n多种样式\nwhile true; do echo "$(date \'+%D %T\' | toilet -f term -F border --gay)"; sleep 1; done\n')])])]),t("h1",{attrs:{id:"返回顶部"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#返回顶部","aria-hidden":"true"}},[a._v("#")]),a._v(" "),t("a",{attrs:{href:"#readme"}},[a._v("返回顶部")])])])},[],!1,null,null,null);s.default=n.exports}}]);